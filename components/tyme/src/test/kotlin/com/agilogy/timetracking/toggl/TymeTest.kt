package com.agilogy.timetracking.toggl

import com.agilogy.timetracking.domain.ProjectName
import io.kotest.core.spec.style.FunSpec
import org.junit.jupiter.api.Assertions.assertEquals
import java.time.Instant
import java.time.ZoneId

class TymeTest : FunSpec() {
    init {
        test("Parse the export CSV file generated by TymeApp") {
            this::class.java.getResourceAsStream("/tyme_20230601-20230630.csv").use { inputStream ->
                val zoneId = ZoneId.of("Europe/Madrid")
                val result: List<Triple<ProjectName, ClosedRange<Instant>, ZoneId>> = readTymeCsv(
                    inputStream!!,
                    zoneId,
                )
                val expected: List<Triple<ProjectName, ClosedRange<Instant>, ZoneId>> = listOf(
                    Triple(
                        ProjectName("ProjectA"),
                        Instant.ofEpochSecond(1685603340)..Instant.ofEpochSecond(1685622300),
                        zoneId,
                    ),
                    Triple(
                        ProjectName("ProjectA"),
                        Instant.ofEpochSecond(1685625655)..Instant.ofEpochSecond(1685635185),
                        zoneId,
                    ),
                    Triple(
                        ProjectName("ProjectA"),
                        Instant.ofEpochSecond(1685689440)..Instant.ofEpochSecond(1685693700),
                        zoneId,
                    ),
                    Triple(
                        ProjectName("ProjectB"),
                        Instant.ofEpochSecond(1685693700)..Instant.ofEpochSecond(1685709000),
                        zoneId,
                    ),
                    Triple(
                        ProjectName("ProjectB"),
                        Instant.ofEpochSecond(1685710800)..Instant.ofEpochSecond(1685712666),
                        zoneId,
                    ),
                )
                assertEquals(expected, result)
            }
        }
    }
}
